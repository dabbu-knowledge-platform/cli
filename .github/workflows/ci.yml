name: NodeJS CI

# Triggers the workflow on push or pull request events but only for the main branch
on: [push, pull_request]

# This workflow contains three jobs: run tests, build and release
jobs:
  # Run tests
  test:
    name: Run tests (node ${{ matrix.node_version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run only with node 14.x
        node_version: ['14.x']
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so we job can access it
      - name: Check out repo
        uses: actions/checkout@v1
      # Setup nodejs v14.16.0 on the runner
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
      # Run all tests
      - name: Run tests
        run: |
          npm ci
          npm test

  # Build the executable
  build:
    name: Build executable (alpine, linux, macos, win) (node ${{ matrix.node_version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run only with node 14.x
        node_version: ['14.x']
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so we job can access it
      - name: Check out repo
        uses: actions/checkout@v1
      # Setup nodejs v14.16.0 on the runner
      - name: Setup Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}
      # Run the build job for all operating systems
      - name: Build executable
        run: |
          npm ci
          npm run ci-build
      # Save the built executable
      - name: Saving alpine executable
        uses: actions/upload-artifact@v2
        with:
          name: dabbu-cli-alpine
          path: dist/dabbu-cli-alpine
      - name: Saving linux executable
        uses: actions/upload-artifact@v2
        with:
          name: dabbu-cli-linux
          path: dist/dabbu-cli-linux
      - name: Saving macos executable
        uses: actions/upload-artifact@v2
        with:
          name: dabbu-cli-macos
          path: dist/dabbu-cli-macos
      - name: Saving windows executable
        uses: actions/upload-artifact@v2
        with:
          name: dabbu-cli-win.exe
          path: dist/dabbu-cli-win.exe

  # Upload the release
  release:
    name: Upload release
    # Make sure the format and build tasks have succeeded before uploading a release
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so we job can access it
      - name: Check out repo
        uses: actions/checkout@v1
      # Download built executables
      - name: Downloading alpine executable
        uses: actions/download-artifact@v2
        with:
          name: dabbu-cli-alpine
      - name: Downloading linux executable
        uses: actions/download-artifact@v2
        with:
          name: dabbu-cli-linux
      - name: Downloading macos executable
        uses: actions/download-artifact@v2
        with:
          name: dabbu-cli-macos
      - name: Downloading windows executable
        uses: actions/download-artifact@v2
        with:
          name: dabbu-cli-win.exe
      # Check if the new version is different
      - name: Check version
        run: |
          revision=`git rev-list --tags --max-count=1`
          version_name=`cat version`
          previous_version_name=`git describe --tags --abbrev=0`
          echo "Uploading version: $version_name"
          echo "Previous version: $previous_version_name"
          echo "::set-output name=version::$version_name"
          echo "::set-output name=previous_version::$previous_version_name"
        id: check-version
      - name: Create release
        # Run it only if the version has been changed
        if: ${{ steps.check-version.outputs.version != steps.check-version.outputs.previous_version }}
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE-NOTES.md
          tag_name: ${{ steps.check-version.outputs.version }}
          prerelease: ${{ contains(steps.check-version.outputs.version, '-') }}
          name: Dabbu CLI ${{ steps.check-version.outputs.version }}
          files: |
            dabbu-cli-alpine
            dabbu-cli-linux
            dabbu-cli-macos
            dabbu-cli-win.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: dabbu-knowledge-platform/dabbu-cli
